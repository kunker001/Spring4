<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">


    <!--配置数据库连接池-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="com.mysql.cj.jdbc.Driver"/>
        <property name="jdbcUrl" value="jdbc:mysql://127.0.0.1:3306/test?serverTimezone=UTC"/>
        <property name="user" value="root"/>
        <property name="password" value="zhuqiran"/>
    </bean>
    <!--注册SQLSessionFactoryBean-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis.xml"/>
    </bean>
    <!--
        Mapper动态代理的整合方式
        此种方式有一个缺点，当需要生成多个Dao层对象时，我们就需要配置多个MapperFactoryBean，会让配置变的繁琐。
        解决方案是：使用支持扫描的Mapper动态代理
    -->
    <!--配置Dao的代理生成对象-->
    <!--<bean id="studentDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="com.csust.IStudentDao"/>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>-->
    <!--使用支持扫描的Mapper动态代理-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.csust.mybatis.dao"/>
    </bean>
    <!--配置Service对象-->
    <bean id="studentService" class="com.csust.mybatis.service.StudentService">
        <!--<property name="studentDao" ref="studentDao"/>-->
        <!--使用了支持扫描的Mapper动态代理，此时生成的代理对象的引用，通过接口的简单接口名引用-->
        <property name="studentDao" ref="IStudentDao"/>
    </bean>
</beans>